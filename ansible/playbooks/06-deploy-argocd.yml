---
- name: Deploy ArgoCD
  hosts: localhost
  connection: local
  become: no
  tasks:
    - name: Add ArgoCD Helm repository
      shell: helm repo add argo https://argoproj.github.io/argo-helm
      ignore_errors: yes

    - name: Update Helm repositories
      shell: helm repo update

    - name: Create ArgoCD namespace
      shell: kubectl create namespace {{ argocd_namespace }}

    - name: Deploy ArgoCD
      shell: |
        helm install argocd argo/argo-cd \
          --namespace {{ argocd_namespace }} \
          --create-namespace \
          --set server.nodeSelector.node-role=application \
          --set server.tolerations[0].key=node-role \
          --set server.tolerations[0].operator=Equal \
          --set server.tolerations[0].value=application \
          --set server.tolerations[0].effect=NoSchedule \
          --set server.service.type=NodePort \
          --set server.service.nodePort=30080 \
          --set controller.nodeSelector.node-role=application \
          --set controller.tolerations[0].key=node-role \
          --set controller.tolerations[0].operator=Equal \
          --set controller.tolerations[0].value=application \
          --set controller.tolerations[0].effect=NoSchedule \
          --set repoServer.nodeSelector.node-role=application \
          --set repoServer.tolerations[0].key=node-role \
          --set repoServer.tolerations[0].operator=Equal \
          --set repoServer.tolerations[0].value=application \
          --set repoServer.tolerations[0].effect=NoSchedule

    - name: Wait for ArgoCD to be ready
      shell: kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=argocd-server -n {{ argocd_namespace }} --timeout=300s

    - name: Get ArgoCD admin password
      shell: |
        kubectl -n {{ argocd_namespace }} get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
      register: argocd_password

    - name: Display ArgoCD access information
      debug:
        msg: |
          ArgoCD deployed successfully!
          URL: http://localhost:30080
          Username: admin
          Password: {{ argocd_password.stdout }}
