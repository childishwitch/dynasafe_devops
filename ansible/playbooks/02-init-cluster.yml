---
- name: Initialize Kubernetes cluster
  hosts: control_plane
  become: yes
  tasks:
    - name: Initialize Kubernetes cluster
      command: >
        kubeadm init
        --pod-network-cidr={{ kube_pod_cidr }}
        --service-cidr={{ kube_service_cidr }}
        --apiserver-advertise-address=0.0.0.0
        --control-plane-endpoint=localhost
      register: kubeadm_init
      ignore_errors: yes

    - name: Create .kube directory
      file:
        path: /root/.kube
        state: directory
        mode: '0755'

    - name: Copy admin.conf to .kube/config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        owner: root
        group: root
        mode: '0644'

    - name: Create .kube directory for current user
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: '0755'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Copy admin.conf to user .kube/config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'

    - name: Extract join command
      shell: kubeadm token create --print-join-command
      register: join_command
      when: kubeadm_init.rc == 0

    - name: Save join command to file
      copy:
        content: "{{ join_command.stdout }}"
        dest: /tmp/join-command.sh
        mode: '0755'
      when: join_command is defined

    - name: Install CNI plugin (Flannel)
      shell: |
        kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
      when: kubeadm_init.rc == 0

    - name: Wait for nodes to be ready
      wait_for:
        timeout: 300
      when: kubeadm_init.rc == 0

    - name: Display join command
      debug:
        msg: "{{ join_command.stdout }}"
      when: join_command is defined
