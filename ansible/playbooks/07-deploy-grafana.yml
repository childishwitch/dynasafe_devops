---
- name: Deploy Grafana outside cluster
  hosts: localhost
  connection: local
  become: no
  tasks:
    - name: Install Docker Compose
      shell: |
        curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose

    - name: Create Grafana directory
      file:
        path: /opt/grafana
        state: directory
        mode: '0755'

    - name: Create Grafana docker-compose.yml
      copy:
        content: |
          version: '3.8'
          services:
            grafana:
              image: grafana/grafana:11.0.0
              container_name: grafana
              ports:
                - "3000:3000"
              environment:
                - GF_SECURITY_ADMIN_PASSWORD={{ grafana_admin_password }}
                - GF_INSTALL_PLUGINS=grafana-piechart-panel
              volumes:
                - grafana-storage:/var/lib/grafana
                - ./provisioning:/etc/grafana/provisioning
              restart: unless-stopped
          volumes:
            grafana-storage:
        dest: /opt/grafana/docker-compose.yml
        mode: '0644'

    - name: Create Grafana provisioning directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /opt/grafana/provisioning/datasources
        - /opt/grafana/provisioning/dashboards

    - name: Create Prometheus datasource configuration
      copy:
        content: |
          apiVersion: 1
          datasources:
            - name: Prometheus
              type: prometheus
              url: http://{{ ansible_default_ipv4.address }}:30090
              access: proxy
              isDefault: true
        dest: /opt/grafana/provisioning/datasources/prometheus.yml
        mode: '0644'

    - name: Create dashboard provisioning configuration
      copy:
        content: |
          apiVersion: 1
          providers:
            - name: 'default'
              orgId: 1
              folder: ''
              type: file
              disableDeletion: false
              updateIntervalSeconds: 10
              allowUiUpdates: true
              options:
                path: /etc/grafana/provisioning/dashboards
        dest: /opt/grafana/provisioning/dashboards/dashboards.yml
        mode: '0644'

    - name: Start Grafana
      shell: |
        cd /opt/grafana
        docker-compose up -d

    - name: Wait for Grafana to be ready
      wait_for:
        port: 3000
        host: "{{ ansible_default_ipv4.address }}"
        timeout: 60

    - name: Display Grafana access information
      debug:
        msg: |
          Grafana is now running!
          URL: http://{{ ansible_default_ipv4.address }}:3000
          Username: admin
          Password: {{ grafana_admin_password }}
