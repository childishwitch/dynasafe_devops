# 節點配置模板
# 使用環境變數替換節點名稱

apiVersion: v1
kind: ConfigMap
metadata:
  name: node-config
  namespace: kube-system
data:
  cluster_name: "${CLUSTER_NAME:-dynasafe-cluster}"
  control_plane_node: "${CONTROL_PLANE_NODE:-dynasafe-cluster-control-plane}"
  infra_node: "${INFRA_NODE:-dynasafe-cluster-worker}"
  app_nodes: "${APP_NODES:-dynasafe-cluster-worker2,dynasafe-cluster-worker3}"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: node-config-job
  namespace: kube-system
spec:
  template:
    spec:
      serviceAccountName: node-config-sa
      containers:
      - name: node-config
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          echo "Configuring nodes for cluster: $(kubectl get configmap node-config -o jsonpath='{.data.cluster_name}')"
          
          # 配置 Control Plane
          CONTROL_PLANE=$(kubectl get configmap node-config -o jsonpath='{.data.control_plane_node}')
          kubectl label nodes $CONTROL_PLANE node-role=control-plane --overwrite
          
          # 配置 Infra 節點
          INFRA_NODE=$(kubectl get configmap node-config -o jsonpath='{.data.infra_node}')
          kubectl label nodes $INFRA_NODE node-role=infra --overwrite
          kubectl taint nodes $INFRA_NODE node-role=infra:NoSchedule --overwrite
          
          # 配置 Application 節點
          APP_NODES=$(kubectl get configmap node-config -o jsonpath='{.data.app_nodes}')
          IFS=',' read -ra NODES <<< "$APP_NODES"
          for node in "${NODES[@]}"; do
            kubectl label nodes $node node-role=application --overwrite
            kubectl taint nodes $node node-role=application:NoSchedule --overwrite
          done
          
          echo "Node configuration completed!"
      restartPolicy: Never
  backoffLimit: 3
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-config-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-config-role
rules:
- apiGroups: [""]
  resources: ["nodes", "configmaps"]
  verbs: ["get", "list", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node-config-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: node-config-role
subjects:
- kind: ServiceAccount
  name: node-config-sa
  namespace: kube-system
